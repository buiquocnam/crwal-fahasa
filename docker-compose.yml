services:
  postgres:
    image: postgres:14
    container_name: fahasa_postgres
    environment:
      POSTGRES_USER: fahasa
      POSTGRES_PASSWORD: fahasa123
      POSTGRES_DB: fahasa_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      fahasa_network:
        aliases:
          - postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fahasa -d fahasa_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  crawler:
    build:
      context: .
      dockerfile: Dockerfile.crawler
    container_name: fahasa_crawler
    volumes:
      - ./data:/app/data
    networks:
      fahasa_network:
        aliases:
          - fahasa_crawler
    depends_on:
      postgres:
        condition: service_healthy

  ingestion:
    build:
      context: .
      dockerfile: Dockerfile.ingestion
    container_name: fahasa_ingestion
    volumes:
      - ./data:/app/data
    networks:
      fahasa_network:
        aliases:
          - fahasa_ingestion
    depends_on:
      postgres:
        condition: service_healthy
      crawler:
        condition: service_completed_successfully

  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: fahasa_api
    ports:
      - "8001:8000"
    networks:
      fahasa_network:
        aliases:
          - fahasa_api
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - PYTHONUNBUFFERED=1

  web:
    build:
      context: .
      dockerfile: Dockerfile.web
    container_name: fahasa_web
    ports:
      - "8002:8000"
    networks:
      fahasa_network:
        aliases:
          - fahasa_web
    depends_on:
      - api

  nginx:
    image: nginx:latest
    container_name: fahasa_nginx
    ports:
      - "8000:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      fahasa_network:
        aliases:
          - fahasa_nginx
    depends_on:
      - api

networks:
  fahasa_network:
    name: fahasa_network
    driver: bridge

volumes:
  postgres_data: 