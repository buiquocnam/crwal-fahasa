services:
  postgres:
    image: postgres:14
    container_name: fahasa_postgres
    environment:
      POSTGRES_USER: fahasa
      POSTGRES_PASSWORD: fahasa123
      POSTGRES_DB: fahasa_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - fahasa_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fahasa -d fahasa_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Crawler
  crawler:
    build:
      context: .
      dockerfile: data_crawling/Dockerfile
    container_name: crawler
    volumes:
      - ./data:/app/data
      - ./data_crawling:/app/data_crawling
    ports:
      - "8003:8000"
    env_file:
      - ./data_crawling/.env
    networks:
      - fahasa_network
    depends_on:
      postgres:
        condition: service_healthy
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "python -c \"import socket; s = socket.socket(); s.connect(('localhost', 8000))\""]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    command: ["python", "-m", "data_crawling.main"]

  # API
  api:
    build:
      context: .
      dockerfile: database_api/Dockerfile
    container_name: fahasa_api
    ports:
      - "8001:8000"
    networks:
      - fahasa_network
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - ./database_api/.env
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "python -c \"import socket; s = socket.socket(); s.connect(('localhost', 8000))\""]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # Ingestion
  ingestion:
    build:
      context: .
      dockerfile: data_ingestion/Dockerfile
    container_name: ingestion
    volumes:
      - ./data:/app/data
      - ./data_ingestion:/app/data_ingestion
    ports:
      - "8004:8000"
    networks:
      - fahasa_network
    env_file:
      - ./data_ingestion/.env
    depends_on:
      postgres:
        condition: service_healthy
      api:
        condition: service_healthy
      crawler:
        condition: service_healthy
    restart: on-failure
    command: ["uvicorn", "data_ingestion.main:app", "--host", "0.0.0.0", "--port", "8000"]

  # Web
  web:
    build:
      context: .
      dockerfile: web/Dockerfile
    container_name: fahasa_web
    volumes:
      - ./web:/app/web
      - ./static:/app/static
    ports:
      - "8002:8000"
    networks:
      - fahasa_network
    env_file:
      - ./web/.env
    depends_on:
      api:
        condition: service_healthy
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "python -c \"import socket; s = socket.socket(); s.connect(('localhost', 8000))\""]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    command: ["python", "/app/web/main.py"]

  # Nginx
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - fahasa_network
    depends_on:
      api:
        condition: service_healthy
      web:
        condition: service_healthy
    restart: on-failure

networks:
  fahasa_network:
    driver: bridge

volumes:
  postgres_data: 